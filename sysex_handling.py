handshake = 0xF0, 0x44, 0x03, 0x00, 0x70, 0x00, 0x40,
sysex = [0x00, 0x00, 0x05, 0x02, 0x04, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08,
         0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x07, 0x0F, 0x07, 0x0F, 0x07,
         0x0F, 0x05, 0x03, 0x07, 0x0F, 0x07, 0x0F, 0x07, 0x0F, 0x07, 0x0F, 0x04, 0x00, 0x07, 0x0F, 0x0F, 0x0F, 0x06,
         0x0C, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0C, 0x00, 0x02, 0x00, 0x07, 0x0F, 0x02,
         0x00, 0x03, 0x07, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x0D, 0x0C, 0x00, 0x00, 0x0C,
         0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x07, 0x0F, 0x07, 0x0F, 0x07,
         0x0F, 0x03, 0x07, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x07, 0x0F, 0x07, 0x0F, 0x07,
         0x0F, 0x03, 0x07, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x07, 0x0F, 0x07, 0x0F, 0x07,
         0x0F, 0x03, 0x07, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x07, 0x0F, 0x07, 0x0F, 0x07,
         0x0F, 0x03, 0x07, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x07, 0x0F, 0x07, 0x0F, 0x07,
         0x0F, 0x03, 0x07, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x07, 0x0F, 0x07, 0x0F, 0x07,
         0x0F, 0x03, 0x07, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x02,
         0x00, 0x01, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x04, 0x00,
         0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x0C, 0x01, 0x03, 0x04, 0x08, 0x01, 0x0D, 0x05, 0x04, 0x02, 0x07, 0x06,
         0x00, 0x03, 0x01, 0x02, 0x04, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x00,
         0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x07, 0x03,
         0x0C, 0x00, 0x09, 0x04, 0x08, 0x00, 0x0B, 0x05, 0x04, 0x00, 0x0F, 0x06, 0x00, 0x02, 0x0F, 0x02, 0x04, 0x00,
         0x00, 0x04, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07,
         0x08, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x00,
         0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x06,
         0x00, 0x00, 0x00, 0x06, 0x09, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x02, 0x04, 0x00,
         0x00, 0x04, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07,
         0x08, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x00,
         0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x06,
         0x00, 0x00, 0x00, 0x06, 0x09, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x02, 0x04, 0x00,
         0x00, 0x04, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07,
         0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x04, 0x02, 0x04, 0x01, 0x05, 0x03, 0x05, 0x03, 0x02, 0x0D, 0x05, 0x03, 0x05, 0x09, 0x04,
         0x0E, 0x05, 0x04, 0x04, 0x08, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00]

correct_checksum = 0x20
print("len of sysex:", len(sysex))


def calculate_checksum(sysex_data):
    new_checksum = sum(sysex_data)
    checksum = (128 - new_checksum % 128) % 128
    return (checksum)



def nibbles_to_bytes(nibbles):
    bytes_list = []
    for i in range(0, len(nibbles), 2):
        byte = (nibbles[i] << 4) | nibbles[i + 1]
        bytes_list.append(byte)
    return bytes_list

print("sysex print:", sysex)
print("correct_checksum:", (correct_checksum))
print("correct_checksum type:", type(correct_checksum))
print("type of sample tone data:", type(sysex[16]))
print("value of sample tone data:", sysex[16])
denibbled = nibbles_to_bytes(sysex)
print("len of denibbled:", len(denibbled))
print("checksum of denibled 336:", (calculate_checksum(denibbled)))
if correct_checksum == calculate_checksum(denibbled):
    print("checksum OK!")
else:
    print("checksum error")
